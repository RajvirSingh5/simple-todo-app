{"ast":null,"code":"var _jsxFileName = \"D:\\\\Newton School\\\\ReactApp\\\\ToDo-app\\\\simple-todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; //importing components\n\nimport Form from './components/Form.js';\nimport TodoList from './components/TodoList.js'; //import Todo from './components/Todo.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //state related\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]); //Run once\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []); //use effect\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]); //functions\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }; //save to local\n\n\n  const saveLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      inputText: inputText,\n      setInputText: setInputText,\n      todos: todos,\n      setTodos: setTodos,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      setTodos: setTodos,\n      todos: todos,\n      filteredTodos: filteredTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZnxlOT32iubGitzt3aac6f5qIXY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Newton School/ReactApp/ToDo-app/simple-todo-app/src/App.js"],"names":["React","useState","useEffect","Form","TodoList","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","getLocalTodos","filterHandler","saveLocalTodos","filter","todo","completed","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n//importing components\nimport Form from './components/Form.js';\nimport TodoList from './components/TodoList.js';\n//import Todo from './components/Todo.js';\n\nfunction App() {\n  //state related\n  const[inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const[status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //Run once\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  //use effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //functions\n  const filterHandler = () => {\n    switch(status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  //save to local\n  const saveLocalTodos = () => {\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  }\n  return (\n    <div className=\"App\">\n      <h1>To Do List</h1>\n      <Form  \n        inputText = {inputText}\n        setInputText={setInputText} \n        todos={todos} \n        setTodos={setTodos} \n        setStatus={setStatus}\n        \n      />\n      <TodoList \n        setTodos = {setTodos}\n        todos = {todos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}