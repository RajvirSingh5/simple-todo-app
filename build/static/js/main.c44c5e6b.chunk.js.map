{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","type","className","onChange","e","target","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c44c5e6b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n\r\n\r\n    const inputTextHandler = (e) => {\r\n        //console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random()*1000 }\r\n        ])\r\n\r\n        setInputText(\"\");\r\n    };\r\n\r\n    const statusHandler = (e) => {\r\n       setStatus(e.target.value);\r\n    }\r\n    return(\r\n        <form>\r\n            <input \r\n                value={inputText}\r\n                type = \"text\" \r\n                className = \"todo-input\" \r\n                onChange={inputTextHandler}\r\n            />\r\n            <button className= \"todo-button\" type=\"submit\" onClick={submitTodoHandler}>\r\n                <i className=\"fas fa-plus-square\">+</i>\r\n            </button>\r\n\r\n            <div className=\"select\">\r\n                <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">completed</option>\r\n                    <option value=\"uncompleted\">uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id))\r\n    };\r\n\r\n   const completeHandler = () => {\r\n       setTodos(todos.map(item => {\r\n           if(item.id === todo.id) {\r\n               return {\r\n                   ...item, completed: !item.completed\r\n               }\r\n           }\r\n           return item;\r\n       }))\r\n   }\r\n\r\n    \r\n\r\n    return(\r\n        <div className = \"todo\">\r\n            <li className={`todo-item ${todo.completed ?  \"completed\" : \"\"}`}>{text}</li>\r\n            <button className=\"complete-btn\" onClick={completeHandler}>\r\n                <i className=\"fas fa-chek\">âœ”</i>\r\n            </button>\r\n            <button className=\"trash-btn\" onClick={deleteHandler}>\r\n                <i className=\"fas fa-trash\">Del</i>\r\n            </button>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\n//Import Component\r\nimport Todo from './Todo.js'\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos }) => {\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo \r\n                        setTodos = {setTodos}\r\n                        todos = {todos}\r\n                        key={todo.id} \r\n                        todo = {todo}\r\n                        text={todo.text} \r\n                        \r\n                    />\r\n                ))}\r\n                \r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n//importing components\nimport Form from './components/Form.js';\nimport TodoList from './components/TodoList.js';\n\n\nfunction App() {\n  //state related\n  const[inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const[status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //Run once\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  //use effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //functions\n  const filterHandler = () => {\n    switch(status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  //save to local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h1>To Do List</h1>\n      <Form  \n        inputText = {inputText}\n        setInputText={setInputText} \n        todos={todos} \n        setTodos={setTodos} \n        setStatus={setStatus}\n        \n      />\n      <TodoList \n        setTodos = {setTodos}\n        todos = {todos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}